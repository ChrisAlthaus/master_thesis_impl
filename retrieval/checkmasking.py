query = [0.3756470697401114, 0.15913577468492163, 0.39969765078152153, 0.12935040093511457, 0.34472489924144656, 0.12705922523936727, 0.4260387975240533, 0.16028138047381368, 0.2874616178822867, 0.15684459898917433, 0.4833020430011764, 0.35159519694537655, 0.22905308955460274, 0.3607599356104026, 0.6367675767619031, 0.48562942367205425, 0.13628661394064495, 0.5555104797435496, 0.5119336836807564, 0.6391386617536025, 0.004581059638169847, 0.6838167492898407, 0.4409271516430133, 0.7708817127845329, 0.2508131407769279, 0.7651538632502566, -1, -1, 0.28288059412615363, 1.0, -1, -1, 0.0, 0.6849623191966959, 0.5761124048477564, 0.41850537109375, 0.1971506379451143, 0.02085476062129284, 0.03515289975403353, 0.08451215814518105, 0.16589980741722687, 0.03778998134815228, 0.10230347007486848, 0.0, -1, -1, -1, 0.3618235986458839, 0.8212035096227166, 0.6218839237763172, 1.0, -1, -1, 0.39943837996177256, -1, 0.0014383727867739332, 2.984385964593672, -1, 0.19996840876461092, 0.6610100778084388, 1.297419651263658, 0.11573223027394305, -1, -1, 0.2191754669912659, 0.3496947347469107]
querymask = "111111111111111111111111110011001111111111110001111001011011110011"
dbvec = [0.4854478168326794, 0.06263979210706436, 0.5324143211022597, 0.004474258352070381, 0.425062321353395, 0.0, 0.583853892512973, 0.06487695631871536, 0.31323732453462894, 0.058165533754993975, 0.6956788192605075, 0.43847878999876116, 0.19917586421652794, 0.4563758934782743, 0.9953696930151315, 0.7002237794852736, 0.0180194478499063, 0.836689044615194, 0.7515913176698905, 1.0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0.5373034354967948, 0.5978648158482143, 1.0, -1, 0.1783047730427325, 0.42866794156004095, 0.841487550567361, -1, 0.5189101650452139, 0.0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1.2974196512636582, -1, -1, -1, 0.2191754669912659, 0.3496947347469107]
dbvecmask = "111111111111111111110000000000000011101110110000000000000000100011"

effectvec = [0.3756470697401114, 0.15913577468492163, 0.39969765078152153, 0.12935040093511457, 0.34472489924144656, 0.12705922523936727, 0.4260387975240533, 0.16028138047381368, 0.2874616178822867, 0.15684459898917433, 0.4833020430011764, 0.35159519694537655, 0.22905308955460274, 0.3607599356104026, 0.6367675767619031, 0.48562942367205425, 0.13628661394064495, 0.5555104797435496, 0.5119336836807564, 0.6391386617536025, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0.5761124048477564, 0.41850537109375, 0.1971506379451143, -1, 0.03515289975403353, 0.08451215814518105, 0.16589980741722687, -1, 0.10230347007486848, 0.0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1.297419651263658, -1, -1, -1, 0.2191754669912659, 0.3496947347469107]

for i in range(len(query)):
    if querymask[i] == '0' or dbvecmask[i] == '0':
        query[i] = dbvec[i]

for x,y in zip(query,effectvec):
    print(x,y)


from numpy import dot
from numpy.linalg import norm

gpds = '/home/althausc/master_thesis_impl/posedescriptors/out/eval/12-01_11-45-16/geometric_pose_descriptor_c_27_mJcJLdLLa_reduced_t0.05_f1_mkpt10n1.json'
query = '/home/althausc/master_thesis_impl/posedescriptors/out/eval/12-01_11-45-16/gpd_fullimg.json'

with open (gpds, "r") as f:
    data = f.read()
data = eval(data)  

with open (query, "r") as f:
    qdata = f.read()
qdata = eval(qdata)[0]  

def cossim(x,y):
    return dot(x, y)/(norm(x)*norm(y))

result = []
for item in data:
    v1 = item['gpd']
    v2 = qdata['gpd']
    m1 = item['mask']
    m2 = qdata['mask']

    c = 1
    penalty = 1/len(v1)
    qeffective = []
    for i in range(len(m1)):
        if m1[i] == '0' or m2[i] == '0':
            qeffective.append(v2[i])
            c = c + penalty
        else:
            qeffective.append(v1[i])
    if item['image_id'] == 90:
        print(v2)
        print(qeffective)
    score = (cossim(v2,qeffective)/2 + 1.0)* item['score']
    result.append((item['image_id'], score))

result = sorted(result, key=lambda x:x[1])
print(result)

print(cossim([1,1,1,1],[1,1,1,1]))
print(cossim([1,1,1,0],[1,1,1,1]))

    